#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}

if [ -f $ENV_DIR/PROJECT_PATH ]; then
	PROJECT_PATH=`cat $ENV_DIR/PROJECT_PATH`
	if [ -d $BUILD_DIR/$PROJECT_PATH ]; then
		echo "-----> Subdir buildpack in $PROJECT_PATH"
		echo "       creating cache: $CACHE_DIR"
		mkdir -p $CACHE_DIR
		TMP_DIR=`mktemp -d $CACHE_DIR/subdirXXXXX`
		echo "       created tmp dir: $TMP_DIR"
		echo "       moving working dir: $PROJECT_PATH to $TMP_DIR"
		cp -R $BUILD_DIR/$PROJECT_PATH/. $TMP_DIR/
	 	echo "       cleaning build dir $BUILD_DIR"
		rm -rf $BUILD_DIR
		echo "       recreating $BUILD_DIR"
		mkdir -p $BUILD_DIR
		echo "       copying preserved work dir from cache $TMP_DIR to build dir $BUILD_DIR"
		cp -R $TMP_DIR/. $BUILD_DIR/
		echo "       cleaning tmp dir $TMP_DIR"
		rm -rf $TMP_DIR
		if [ -f "$BUILD_DIR/package-lock.json" -a -f "$BUILD_DIR/yarn.lock" ] ; then
			echo "       Warning!"
			echo "       Detected two files defining project dependencies:"
			echo "       - npm: package-lock.json"
			echo "       - yarn: yarn.lock"
			echo "       Trying to build ends with:"
			cat <<EOF
			remote: -----> Build failed
remote:  !     Two different lockfiles found: package-lock.json and yarn.lock
remote: 
remote:        Both npm and yarn have created lockfiles for this application,
remote:        but only one can be used to install dependencies. Installing
remote:        dependencies using the wrong package manager can result in missing
remote:        packages or subtle bugs in production.
remote: 
remote:        - To use npm to install your application's dependencies please delete
remote:          the yarn.lock file.
remote: 
remote:          $ git rm yarn.lock
remote: 
remote:        - To use yarn to install your application's dependences please delete
remote:          the package-lock.json file.
remote: 
remote:          $ git rm package-lock.json
remote:     
remote:        https://help.heroku.com/0KU2EM53
EOF
			echo "       prefering npm"
			echo "       cleaning tmp dir $BUILD_DIR/package-lock.json"
			rm  "$BUILD_DIR/yarn.lock"
		fi
		exit 0
	fi
fi

echo "PROJECT_PATH is undefined"
exit 1


